// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(BudgetContext))]
    [Migration("20220824221131_addedSeeds")]
    partial class addedSeeds
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DAL.Models.Budget", b =>
                {
                    b.Property<int>("BudgetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BudgetID"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("BudgetID");

                    b.HasIndex("UserID");

                    b.ToTable("Budgets");

                    b.HasData(
                        new
                        {
                            BudgetID = 1,
                            EndDate = new DateTime(2022, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "budgetNr1",
                            StartDate = new DateTime(2022, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalAmount = 6000m,
                            UserID = 1
                        },
                        new
                        {
                            BudgetID = 2,
                            EndDate = new DateTime(2022, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "budgetNr2",
                            StartDate = new DateTime(2022, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalAmount = 6000m,
                            UserID = 1
                        },
                        new
                        {
                            BudgetID = 3,
                            EndDate = new DateTime(2022, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "budgetNr1",
                            StartDate = new DateTime(2022, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalAmount = 6000m,
                            UserID = 2
                        },
                        new
                        {
                            BudgetID = 4,
                            EndDate = new DateTime(2022, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "budgetNr2",
                            StartDate = new DateTime(2022, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalAmount = 6000m,
                            UserID = 2
                        },
                        new
                        {
                            BudgetID = 5,
                            EndDate = new DateTime(2022, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "budgetNr1",
                            StartDate = new DateTime(2022, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalAmount = 6000m,
                            UserID = 3
                        },
                        new
                        {
                            BudgetID = 6,
                            EndDate = new DateTime(2022, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "budgetNr2",
                            StartDate = new DateTime(2022, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalAmount = 6000m,
                            UserID = 3
                        },
                        new
                        {
                            BudgetID = 7,
                            EndDate = new DateTime(2022, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "budgetNr1",
                            StartDate = new DateTime(2022, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalAmount = 6000m,
                            UserID = 4
                        },
                        new
                        {
                            BudgetID = 8,
                            EndDate = new DateTime(2022, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "budgetNr2",
                            StartDate = new DateTime(2022, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalAmount = 6000m,
                            UserID = 4
                        });
                });

            modelBuilder.Entity("DAL.Models.BudgetCategory", b =>
                {
                    b.Property<int>("BudgetCategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BudgetCategoryID"), 1L, 1);

                    b.Property<int?>("BudgetID")
                        .HasColumnType("int");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("CustomName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxAmount")
                        .HasColumnType("int");

                    b.HasKey("BudgetCategoryID");

                    b.HasIndex("BudgetID");

                    b.HasIndex("CategoryID");

                    b.ToTable("BudgetCategories");

                    b.HasData(
                        new
                        {
                            BudgetCategoryID = 1,
                            BudgetID = 1,
                            CategoryID = 1,
                            CustomName = "BudgetCategory1",
                            MaxAmount = 10
                        },
                        new
                        {
                            BudgetCategoryID = 2,
                            BudgetID = 2,
                            CategoryID = 2,
                            CustomName = "BudgetCategory2",
                            MaxAmount = 10
                        },
                        new
                        {
                            BudgetCategoryID = 3,
                            BudgetID = 3,
                            CategoryID = 3,
                            CustomName = "BudgetCategory3",
                            MaxAmount = 10
                        },
                        new
                        {
                            BudgetCategoryID = 4,
                            BudgetID = 4,
                            CategoryID = 4,
                            CustomName = "BudgetCategory4",
                            MaxAmount = 10
                        },
                        new
                        {
                            BudgetCategoryID = 5,
                            BudgetID = 5,
                            CategoryID = 5,
                            CustomName = "BudgetCategory5",
                            MaxAmount = 10
                        },
                        new
                        {
                            BudgetCategoryID = 6,
                            BudgetID = 6,
                            CategoryID = 1,
                            CustomName = "BudgetCategory6",
                            MaxAmount = 10
                        },
                        new
                        {
                            BudgetCategoryID = 7,
                            BudgetID = 7,
                            CategoryID = 2,
                            CustomName = "BudgetCategory7",
                            MaxAmount = 10
                        },
                        new
                        {
                            BudgetCategoryID = 8,
                            BudgetID = 8,
                            CategoryID = 3,
                            CustomName = "BudgetCategory8",
                            MaxAmount = 10
                        },
                        new
                        {
                            BudgetCategoryID = 9,
                            BudgetID = 1,
                            CategoryID = 4,
                            CustomName = "BudgetCategory9",
                            MaxAmount = 10
                        },
                        new
                        {
                            BudgetCategoryID = 10,
                            BudgetID = 2,
                            CategoryID = 5,
                            CustomName = "BudgetCategory10",
                            MaxAmount = 10
                        },
                        new
                        {
                            BudgetCategoryID = 11,
                            BudgetID = 3,
                            CategoryID = 6,
                            CustomName = "BudgetCategory11",
                            MaxAmount = 10
                        },
                        new
                        {
                            BudgetCategoryID = 12,
                            BudgetID = 4,
                            CategoryID = 6,
                            CustomName = "BudgetCategory12",
                            MaxAmount = 10
                        });
                });

            modelBuilder.Entity("DAL.Models.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CategoryID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            Name = "Food"
                        },
                        new
                        {
                            CategoryID = 2,
                            Name = "Fuel"
                        },
                        new
                        {
                            CategoryID = 3,
                            Name = "Clothes"
                        },
                        new
                        {
                            CategoryID = 4,
                            Name = "Furniture"
                        },
                        new
                        {
                            CategoryID = 5,
                            Name = "House"
                        },
                        new
                        {
                            CategoryID = 6,
                            Name = "NotHouse"
                        });
                });

            modelBuilder.Entity("DAL.Models.Change", b =>
                {
                    b.Property<int>("ChangeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChangeID"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("BudgetCategoryID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ChangeID");

                    b.HasIndex("BudgetCategoryID");

                    b.ToTable("Changes");
                });

            modelBuilder.Entity("DAL.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            Email = "Adam@gmail.com",
                            Password = "qwerty123",
                            Username = "Adam"
                        },
                        new
                        {
                            UserID = 2,
                            Email = "Kim@gmail.com",
                            Password = "qwerty123",
                            Username = "Kim"
                        },
                        new
                        {
                            UserID = 3,
                            Email = "Omar@gmail.com",
                            Password = "qwerty123",
                            Username = "Omar"
                        },
                        new
                        {
                            UserID = 4,
                            Email = "Ahmad@gmail.com",
                            Password = "qwerty123",
                            Username = "Ahmad"
                        });
                });

            modelBuilder.Entity("DAL.Models.Budget", b =>
                {
                    b.HasOne("DAL.Models.User", null)
                        .WithMany("Budgets")
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("DAL.Models.BudgetCategory", b =>
                {
                    b.HasOne("DAL.Models.Budget", null)
                        .WithMany("BudgetCategories")
                        .HasForeignKey("BudgetID");

                    b.HasOne("DAL.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("DAL.Models.Change", b =>
                {
                    b.HasOne("DAL.Models.BudgetCategory", null)
                        .WithMany("Changes")
                        .HasForeignKey("BudgetCategoryID");
                });

            modelBuilder.Entity("DAL.Models.Budget", b =>
                {
                    b.Navigation("BudgetCategories");
                });

            modelBuilder.Entity("DAL.Models.BudgetCategory", b =>
                {
                    b.Navigation("Changes");
                });

            modelBuilder.Entity("DAL.Models.User", b =>
                {
                    b.Navigation("Budgets");
                });
#pragma warning restore 612, 618
        }
    }
}
